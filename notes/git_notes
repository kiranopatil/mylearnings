$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
## What is Version Control System ##

## Main purpose of VCS ##


## Version Control Systems Types and Popular Softwares ##     
      There are 3 Types of Version Control Systems
      * Localized Version Control Systems: RCS, 
      * Centralized Version Control Systems[CVCS]: SubVersion(SVN), CVS, Preforce..
      * Distributed Version Control Systems[DVCS]: Git, BitKeeper, Mercurial, Bazaar or Darcs ...


## Abbrevations ##
      SCM - Source Code Management
      VCS - Version Control Systems
      SVN - Sub Version
      DVCS -
      RCS - Revision Control Systems

## To Know ## 
      git checkout (to modify) and checkin (to release the file)
      
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

## About GIT ##
      * It's a "Distributed Version(Revision) Control Systems VCS"
      * Developed by Linus Torvals for Kernel Development.
      * GIT is opensource, works offline
      * GIT Supports GUI and CLI 
      * GIT Vs GITHUB - Git is an open-source tool..developers install locally to manage source code, 
      while GitHub is an online service to which developers who use Git can connect and upload or download resources.

## GIT Downloads ##
      https://git-scm.com
      https://gitforwindows.org/

## In GIT CLI we can create alias for lengthy commands
## Two ways to start with working on GIT repository
        [git init command - Initializing repository to track file/directories init]
        [Note: .git directory/folder gets created] 
        [Note: removal of .git folder will remove version controlling and tracking, It's better to backup this folder on regular basis]
        [Note: If you want to remove a repository out of GIT control, remove the .git folder/directory]
        [.gitignore in repository will let GIT to ignore the files/deirectory that are not required for tracking
         Eg: logfiles, trace files, Python/C object files, .pyc files.. etc..]

## GIT Rules - by Veeru ## 
      * create .gitignore file immediately after executing git init command 
      * Always group the file(s) related to a feature/group as a single commit
      * Never commit half modified work of source code (files)
      * When there are modified files which are under git control, and you don't want to commit now ( as wanna go for 
      a movie or shift over or need to shutdown computer or want to switch to a diff branch) then you need to move those 
      files to stash.
      * Before any push to remote repository first do git pull and then git push.
      [git pull will help to check if any modifcations to the preivously pulled source code/files]
      * Use git init --bare for central repositories, which doesn't allow commits, but allows only push n pull 
      * If you've already run git init on a project directory and it contains a .git subdirectory, 
      you can safely run git init again on the same project directory. It will not override an existing .git configuration.
      * 
## Fetch Vs Pull in Cloned repository ## 
      * git fetch is similar to pull but doesn't merge. i.e. it fetches remote updates ( refs and objects ) but your 
      local stays the same (i.e. origin/master gets updated but master stays the same) . git pull pulls down from a 
      remote and instantly merges. git clone clones a repo.
      
## Areas in GIT ## 

      STASH || Working Area / Working Directory || Staging Area/Index Area || Local Repository || Remote Repository|| 
            ||                                  ||                         || .git             ||                  ||
            
      STASH: git stash temporarily shelves (or stashes) changes you've made to your working copy so you can work on 
      something else, and then come back and re-apply them later on.
      WORKING AREA/DIRECTORY: Repositories created with the git init command are called working directories. ... 
      A .git subfolder with all the git related revision history of your repo A working tree, or 
      checked out copies of your project files. Repositories created with git init --bare are called bare repos.
      STAGING/INDEX AREA: 
      LOCAL(.git) REPOSITORY:
      REMOTE REPOSITORY: 
git amend (update) - is an update to a commit
The --cached option is synonymous with --staged.

## Reference URL's ##
https://www.git-tower.com/learn/git/faq/difference-between-git-fetch-git-pull
## Reference Video URL's ##
## GIT by  Corey Schafer
## https://www.youtube.com/watch?v=HVsySz-h9r4&list=PL-osiE80TeTuRUfjRe54Eea17-YfnOOAx
## Reference Books ##
